name: macOS
on:
  workflow_dispatch:
  push:
    branches:
      - master
      - ci/vcpkg-update
  pull_request:
    branches:
      - master
env:
  MELONDS_GIT_BRANCH: ${{ github.ref }}
  MELONDS_GIT_HASH: ${{ github.sha }}
  MELONDS_BUILD_PROVIDER: GitHub Actions
  MELONDS_VERSION_SUFFIX: " RC"
jobs:
  build-macos:
    strategy:
      matrix:
        arch: [x86_64, arm64]
    name: ${{ matrix.arch }}
    runs-on: macos-14
    steps:
      - name: Check out sources
        uses: actions/checkout@v3
        
      - name: Install dependencies with Homebrew
        run: |
          brew install autoconf automake autoconf-archive libtool python-setuptools
          brew install cmake ninja pkg-config
          brew install qt@6 sdl2 libarchive zstd enet
        
      - name: Set up vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: b2cb0da531c2f1f740045bfe7c4dac59f0b2b69c
        
      - name: Configure CMake
        run: |
          # QtのパスをCMAKE_PREFIX_PATHに追加
          QT_PATH=$(brew --prefix qt@6)
          
          # 環境に応じてCMakeプリセットを作成
          cmake -B build/release-mac-${{ matrix.arch }} \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }} \
            -DCMAKE_PREFIX_PATH="${QT_PATH}" \
            -DMELONDS_EMBED_BUILD_INFO=ON \
            -DVCPKG_MANIFEST_MODE=OFF
        
      - name: Build
        run: |
          cmake --build build/release-mac-${{ matrix.arch }} --config Release
        
      - name: Create app bundle
        run: |
          cd build/release-mac-${{ matrix.arch }}
          # macOSバンドルの作成
          cmake --install . --prefix=./install
          # QtライブラリをバンドルにデプロイするためのmacdeployQtを実行
          QT_PATH=$(brew --prefix qt@6)
          $QT_PATH/bin/macdeployqt melonDS.app -verbose=2
        
      - name: Compress app bundle
        shell: bash
        run: |
          cd build/release-mac-${{ matrix.arch }}
          zip -r -y ../../macOS-${{ matrix.arch }}.zip melonDS.app
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macOS-${{ matrix.arch }}
          path: macOS-${{ matrix.arch }}.zip
          retention-days: 1
          
  universal-binary:
    name: Universal binary
    needs: [build-macos]
    runs-on: macos-14
    continue-on-error: true
    steps:
      - name: Download x86_64
        uses: actions/download-artifact@v4
        with:
          name: macOS-x86_64
          path: x86_64
          
      - name: Download arm64
        uses: actions/download-artifact@v4
        with:
          name: macOS-arm64
          path: arm64
          
      - name: Combine app bundles
        shell: bash
        run: |
          unzip x86_64/*.zip -d x86_64
          unzip arm64/*.zip -d arm64
          lipo {x86_64,arm64}/melonDS.app/Contents/MacOS/melonDS -create -output melonDS
          cp -a arm64/melonDS.app melonDS.app
          cp melonDS melonDS.app/Contents/MacOS/melonDS
          codesign -s - --deep melonDS.app
          zip -r -y macOS-universal.zip melonDS.app
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macOS-universal
          path: macOS-universal.zip